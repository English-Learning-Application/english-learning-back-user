version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region ap-southeast-2 | docker login --username AWS --password-stdin 761018889743.dkr.ecr.ap-southeast-2.amazonaws.com
      - IMAGE_TAG="latest"

  build:
    commands:
      - echo Building the Docker image...
      - docker build -t user-microservice:$IMAGE_TAG .
      - docker tag user-microservice:$IMAGE_TAG 761018889743.dkr.ecr.ap-southeast-2.amazonaws.com/user-microservice:$IMAGE_TAG

  post_build:
    commands:
      - echo Pushing the Docker image to ECR...
      - docker push 761018889743.dkr.ecr.ap-southeast-2.amazonaws.com/user-microservice:$IMAGE_TAG
      - echo Writing image definitions file...
      - echo "export IMAGE_TAG=$IMAGE_TAG" > image_tag.txt
      - echo "Updating Kubernetes deployment..."
      - aws eks update-kubeconfig --region ap-southeast-2 --name aws-dev-cluster
      - kubectl config use-context arn:aws:eks:ap-southeast-2:761018889743:cluster/aws-dev-cluster
      - export AWS_ACCESS_KEY_ID=$(aws sts get-session-token --duration-seconds 3600 --query "Credentials.AccessKeyId" --output text)
      - export AWS_SECRET_ACCESS_KEY=$(aws sts get-session-token --duration-seconds 3600 --query "Credentials.SecretAccessKey" --output text)
      - export AWS_SESSION_TOKEN=$(aws sts get-session-token --duration-seconds 3600 --query "Credentials.SessionToken" --output text)
      - kubectl apply -f deployment.yaml
      - kubectl rollout restart deployment user-service-deployment

artifacts:
  files:
    - image_tag.txt
    - deployment.yaml