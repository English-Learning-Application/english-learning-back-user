version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region ap-southeast-2 | docker login --username AWS --password-stdin 761018889743.dkr.ecr.ap-southeast-2.amazonaws.com
      - IMAGE_TAG="latest"

  build:
    commands:
      - echo Building the Docker image...
      - docker build -t user-microservice:$IMAGE_TAG .
      - docker tag user-microservice:$IMAGE_TAG 761018889743.dkr.ecr.ap-southeast-2.amazonaws.com/user-microservice:$IMAGE_TAG

  post_build:
    commands:
      - echo Pushing the Docker image to ECR...
      - docker push 761018889743.dkr.ecr.ap-southeast-2.amazonaws.com/user-microservice:$IMAGE_TAG
      - echo Writing image definitions file...
      - echo "export IMAGE_TAG=$IMAGE_TAG" > image_tag.txt
      - echo "Updating Kubernetes deployment..."
      -
      # Retrieve AWS credentials from Secrets Manager
      - echo "Retrieving AWS credentials from Secrets Manager..."
      - SECRET=$(aws secretsmanager get-secret-value --secret-id my/aws-credentials --query SecretString --output text)

      # Extract credentials from the secret
      - export AWS_ACCESS_KEY_ID=$(echo $SECRET | jq -r .aws_access_key_id)
      - export AWS_SECRET_ACCESS_KEY=$(echo $SECRET | jq -r .aws_secret_access_key)

      - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
      - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
      - aws configure set region ap-southeast-2

      - aws eks update-kubeconfig --region ap-southeast-2 --name aws-dev-cluster
      - kubectl config use-context arn:aws:eks:ap-southeast-2:761018889743:cluster/aws-dev-cluster
      - kubectl apply -f deployment.yaml
      - kubectl rollout restart deployment user-service-deployment

artifacts:
  files:
    - image_tag.txt
    - deployment.yaml